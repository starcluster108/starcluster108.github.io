<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>starcluster的博客</title>
    <link>https://starcluster108.github.io/</link>
    <description>Recent content on starcluster的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Apr 2022 10:15:59 +0800</lastBuildDate><atom:link href="https://starcluster108.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mysql底层数据结构</title>
      <link>https://starcluster108.github.io/mysqls/mysql%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 22 Apr 2022 10:15:59 +0800</pubDate>
      
      <guid>https://starcluster108.github.io/mysqls/mysql%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>一、索引数据结构  数据机构查看网站推荐 查询每个page页的大小,mysql创建page页的时候会用连续的磁盘空间，加载的时候也会一次性加载到内存（默认大小16k）。 show global status like &amp;#39;Innodb_page_size&amp;#39;;   1.1、二叉数   对于有序的数据的插入，会形成链表，导致大量的磁盘io，因此mysql没有选择这样的数据结构。
  1.2、红黑树（二叉平衡树）   对于大数据量的数据插入，会导致树的高度很高，对底层叶子节点的搜索同样会产生大量的磁盘io，因此mysql没有选择这样的数据结构。
  1.3、Hash表  对索引的key进行一次hash计算就可以定位出数据的存储位置，很多时候hash索引要比B+Tree更高效。但因为其只满足“=”不支持“in”和范围查询，同时存在hash冲突，因此mysql没有选择这样的数据结构。  1.4、B tree   所有节点都存有数据，不存在冗余索引，同一个page页存放的索引数相对B+Tree会少一点，叶子节点之间不存在指针连接。
  1.5、B+tree  非叶子节点不存储具体的数据，可以存放更多的索引，只存储索引（冗余）。叶子节点包含所有索引字段。叶子节点用指针连接，提供了范围访问的性能。 主键索引叶子节点存了所有的数据，非主键索叶子节点存对应的主键索引，先找到对应主键索引后通过回表的方式到主键索引中获取相应数据。   </description>
    </item>
    
    <item>
      <title>Springframework源码解析</title>
      <link>https://starcluster108.github.io/javas/springframework%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 22 Apr 2022 09:24:17 +0800</pubDate>
      
      <guid>https://starcluster108.github.io/javas/springframework%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
      <description>一、源码环境搭建 二、 </description>
    </item>
    
    <item>
      <title>Hugo&#43;github搭建个人博客</title>
      <link>https://starcluster108.github.io/tools/hugo&#43;github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 21 Apr 2022 16:54:36 +0800</pubDate>
      
      <guid>https://starcluster108.github.io/tools/hugo&#43;github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>一、github创建仓库   仓库名称必须是账号名称+github.io
  二、hugo配置搭建   下载hugo（https://github.com/gohugoio/hugo/releases 下载后解压配置环境变量即可
  用 Hugo 生成个人博客网站
hugo new site blogs # 会在当前目录下生成blogs目录   下载hugo主题（https://themes.gohugo.io/）
  cmd进入.blogs/themes/
git clone https://github.com/matcornic/hugo-theme-learn.git # git拉取不下来可以直接下载zip包，解压到themes目录下   启动编译项目
# 1 -t指定主题启动，在blogs目录下执行 hugo server -t hugo-theme-learn --buildDrafts # 配置文件中添加主题启动blogs目录下的config.toml文件最后加入 theme = &amp;#34;hugo-theme-learn&amp;#34; hugo server --buildDrafts   发布一篇博客文章
hugo new post/springframework源码分析.md   生成远程github应用
hugo --theme=hugo-theme-learn --baseUrl=&amp;#34;https://starcluster108.github.io/&amp;#34; --buildDrafts # 会在blogs目录下生成public目录(github) hugo --theme=hugo-theme-learn --baseUrl=&amp;#34;https://starcluster08.gitee.io/&amp;#34; --buildDrafts # (gitee) # 进入public目录进行如下操作 git init git add .</description>
    </item>
    
  </channel>
</rss>
